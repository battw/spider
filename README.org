* Spider
Provides a websocket network for communication between web browsers.

** Design 
*** SpiderFoot
At the browser end, all websocket network setup and operation is encapsulated in a SpidersFoot object.
- getIds(): The ids of the other connected clients
- sendMessage(to : id, message) : error for non existent receivers (to)
- registerReceiver(callback_function)
  - receiveMessage(from : id, message)  the callback function signature.
*** spider
The serverside implementation of the websocket network.
- spider.Hatch()
- GrowLeg(*websocket.Conn)

**** spider.leg
Encapsulates the websocket connection between the body and the browsers. It listens to the websocket and passes any messages to the body.
- NewLeg(ws: websocket): Leg 
- go ListenToClient(dest  chan<- msg)
  - forwards messages received from the client onto "dest"
- sendMsg(message)  
  - sends messages to its Foot (connected browser)

